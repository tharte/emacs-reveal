# SPDX-FileCopyrightText: 2017-2020 Jens Lechtenb√∂rger
# SPDX-License-Identifier: CC0-1.0

# Inspired by: https://docs.gitlab.com/ee/ci/docker/using_docker_build.html
# See also:
# - https://docs.gitlab.com/ee/ci/variables/
# - https://docs.gitlab.com/ee/ci/yaml/

# CI for emacs-reveal: Tests and docker images

variables:
  ROBOT_FRAMEWORK: ppodgorsek/robot-framework:latest
  ROBOT_HTML_DIR: public
  ROBOT_REPORTS_DIR: reports
  ROBOT_TESTS_DIR: robotframework
  OLD_EMACS_REVEAL: registry.gitlab.com/oer/docker/emacs-reveal:latest

stages:
  - build
  - test
  - build-docker
  - build-new
  - test-docker
  - push-docker

.build_html: &build_html
  script:
    - make all
  artifacts:
    paths:
      - tests/public
      - docker/emacs-reveal.tar.gz
    expire_in: 20 minutes
  only:
    refs:
      - lechten
      - master
      - merge_requests

build-html-1:
  <<: *build_html
  stage: build
  image: $OLD_EMACS_REVEAL

.docker_template: &docker_template
  image: docker:stable
  services:
    - docker:dind
  variables:
    IMAGE_TAG: $CI_REGISTRY_IMAGE/$CI_JOB_NAME:$CI_COMMIT_TAG
    IMAGE_LATEST: $CI_REGISTRY_IMAGE/$CI_JOB_NAME:latest
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY

debian-emacs-tex:
  <<: *docker_template
  stage: build
  script:
    - docker build -t $IMAGE_LATEST -f docker/$CI_JOB_NAME/Dockerfile .
    - docker push $IMAGE_LATEST
  only:
    changes:
      - docker/debian-emacs-tex/*

test-reuse:
  stage: test
  image: fsfe/reuse:latest
  script:
    - reuse lint

.test-robot: &test-robot
  <<: *docker_template
  before_script:
    - export TESTDIR="${CI_PROJECT_DIR}/tests"
  script:
    - docker run -v $TESTDIR/$ROBOT_REPORTS_DIR:/opt/robotframework/reports:Z -v $TESTDIR/$ROBOT_TESTS_DIR:/opt/robotframework/tests:Z -v $TESTDIR/$ROBOT_HTML_DIR:/robot/public -e BROWSER=firefox -e PRESENTATION=test.html $ROBOT_FRAMEWORK
    - docker run -v $TESTDIR/$ROBOT_REPORTS_DIR:/opt/robotframework/reports:Z -v $TESTDIR/$ROBOT_TESTS_DIR:/opt/robotframework/tests:Z -v $TESTDIR/$ROBOT_HTML_DIR:/robot/public -e BROWSER=chrome -e PRESENTATION=test.html $ROBOT_FRAMEWORK
  artifacts:
    when: on_failure
    paths:
      - $TESTDIR/$ROBOT_HTML_DIR
      - $TESTDIR/$ROBOT_REPORTS_DIR
    expire_in: 1 week
  only:
    refs:
      - lechten
      - master
      - merge_requests

test-robot-1:
  <<: *test-robot
  stage: test

emacs-reveal:
  <<: *docker_template
  stage: build-docker
  script:
    - docker build -t emacs-reveal:latest -t $IMAGE_LATEST -f docker/$CI_JOB_NAME/Dockerfile docker
  only:
    - tags
    - lechten

build-html-2:
  <<: *build_html
  stage: build-new
  image: emacs-reveal:latest
  only:
    - tags
    - lechten

test-robot-2:
  <<: *test-robot
  stage: test-docker
  only:
    - lechten
    - tags

emacs-reveal-push:
  <<: *docker_template
  stage: push-docker
  script:
    - docker push $CI_REGISTRY_IMAGE/emacs-reveal:latest
    - docker tag $CI_REGISTRY_IMAGE/emacs-reveal:latest $CI_REGISTRY_IMAGE/emacs-reveal:$CI_COMMIT_TAG
    - docker push $CI_REGISTRY_IMAGE/emacs-reveal:$CI_COMMIT_TAG
  only:
    - tags
